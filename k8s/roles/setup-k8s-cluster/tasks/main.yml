---
- name: Import Common Role
  import_role:
    name: common

- name: Create cluster when az >= 3
  shell: |
    kops create cluster \
      --name="{{ k8s_domain_name }}" \
      --state=s3://"{{ k8s_domain_name }}" \
      --node-count="{{ node_count }}" \
      --cloud=aws \
      --zones="{{ az.availability_zones.0.zone_name }}","{{ az.availability_zones.1.zone_name }}","{{ az.availability_zones.2.zone_name }}" \
      --node-size="{{ node_size }}" \
      --master-size="{{ master_size }}" \
      --master-zones="{{ az.availability_zones.0.zone_name }}","{{ az.availability_zones.1.zone_name }}","{{ az.availability_zones.2.zone_name }}" \
      --kubernetes-version="{{ kubernetes_version }}" \
      --networking cilium \
      --topology=private \
      --bastion=true \
      --ssh-public-key="{{ ssh_public_key }}"
  when: az.availability_zones | length | int >= 3
    
- name: Create cluster when az < 3
  shell: |
    kops create cluster \
      --name="{{ k8s_domain_name }}" \
      --state=s3://"{{ k8s_domain_name }}" \
      --node-count="{{ node_count }}" \
      --cloud=aws \
      --zones="{{ az.availability_zones.0.zone_name }}","{{ az.availability_zones.0.zone_name }}","{{ az.availability_zones.0.zone_name }}" \
      --node-size="{{ node_size }}" \
      --master-size="{{ master_size }}" \
      --master-zones="{{ az.availability_zones.0.zone_name }}","{{ az.availability_zones.0.zone_name }}","{{ az.availability_zones.0.zone_name }}" \
      --kubernetes-version="{{ kubernetes_version }}" \
      --networking cilium \
      --topology=private \
      --bastion=true \
      --ssh-public-key="{{ ssh_public_key }}"
  when: az.availability_zones | length | int < 3

- name: Update cluster
  shell: kops update cluster --name "{{ k8s_domain_name }}" --state s3://"{{ k8s_domain_name }}" --yes

- name: Validate cluster
  shell: kops validate cluster --wait 10m

- name: Create rds vpc security group
  ec2_group:
    state: present
    profile: "{{ aws_profile}}"
    region: "{{ aws_region }}"
    vpc_id: "{{ rds_vpc_id }}"
    name: "{{ service_name }}_sg_{{ rds_vpc_id }}"
    description: "rds security group for {{ rds_vpc_id }}"
    rules:
      - proto: all
        cidr_ip: "{{ k8s_vpc_cidr }}"
        rule_desc: allow traffic from k8s VPC CIDR
    tags:
      Name: "{{ service_name }}_sg_{{ rds_vpc_id }}"
      app: "{{ service_name }}"
  register: rds_sg

- name: Provision rds instance
  rds:
    command: create
    profile: "{{ aws_profile}}"
    region: "{{ aws_region }}"
    instance_name: rds
    db_engine: MySQL
    engine_version: 8.0.20
    size: 20
    instance_type: db.t2.micro
    port: 3306
    username: "{{ rds_username }}"
    password: "{{ rds_password }}"
    vpc_security_groups: "{{ rds_sg.security_group.group_id }}"
    subnet: "{{ vpc_subnet_id }}"
    publicly_accessible: no
    wait: yes
    tags:
      Name: rds
  register: rds
- debug:
    msg: "The rds endpoint is {{ rds.instance.endpoint }}"

- name: Setup VPC peering
  ec2_vpc_peer:
    vpc_id: k8s_vpc_id
    peer_vpc_id: rds_vpc_id
    state: present
    tags:
      Name: Peering connection for k8s and rds
  register: vpc_peer

- name: Accept local VPC peering request
  ec2_vpc_peer:
    peering_id: "{{ vpc_peer.peering_id }}"
    state: accept
  register: action_peer

- name: Update the route table in the rds vpc
  ec2_vpc_route_table:
    state: present
    lookup: id
    route_table_id: "{{ rds_route_table.route_tables[0].id }}"
    vpc_id: "{{ rds_vpc_id }}"
    profile: "{{ aws_profile }}"
    region: "{{ aws_region }}"
    routes:
      - dest: k8s_vpc_cidr
        vpc_peering_connection_id: "{{ vpc_peer.peering_id }}"
  register: update_rds_route_table

- name: Update the route table in the k8s vpc
  ec2_vpc_route_table:
    state: present
    lookup: id
    route_table_id: "{{ k8s_route_table.route_tables[0].id }}"
    vpc_id: "{{ k8s_vpc_id }}"
    profile: "{{ aws_profile }}"
    region: "{{ aws_region }}"
    routes:
      - dest: rds_vpc_cidr
        vpc_peering_connection_id: "{{ vpc_peer.peering_id }}"
  register: update_k8s_route_table