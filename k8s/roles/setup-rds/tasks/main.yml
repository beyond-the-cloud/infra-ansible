---
- name: include variables
  include_vars:
    file: "{{ service_name }}.yml"

- name: Import Common Role
  import_role:
    name: common

- name: get rds vpc facts
  ec2_vpc_net_facts:
    profile: "{{ aws_profile}}"
    region: "{{ aws_region }}"
    filters:
      "tag:Name": "{{ sg_vpc_name }}"
  register: rds_vpc_facts

- name: set rds vpc facts
  set_fact:
    rds_vpc_cidr: "{{ rds_vpc_facts.vpcs.0.cidr_block }}"
    rds_vpc_id: "{{ rds_vpc_facts.vpcs.0.vpc_id }}"
- debug: var=rds_vpc_id

- name: Grab the rds route tables
  ec2_vpc_route_table_info:
    profile: "{{ aws_profile }}"
    region: "{{ aws_region }}"
    filters:
      vpc-id: "{{ rds_vpc_id }}"
  register: rds_route_table

- name: Create rds vpc security group
  ec2_group:
    state: present
    profile: "{{ aws_profile }}"
    region: "{{ aws_region }}"
    vpc_id: "{{ rds_vpc_id }}"
    name: "{{ service_name }}_sg_{{ rds_vpc_id }}"
    description: "rds security group for {{ rds_vpc_id }}"
    rules:
      - proto: all
        cidr_ip: "{{ k8s_vpc_cidr }}"
        rule_desc: allow traffic from k8s VPC CIDR
    tags:
      Name: "{{ service_name }}_sg_{{ rds_vpc_id }}"
      app: "{{ service_name }}"
  register: rds_sg

- debug: msg="{{ rds_sg }}"

- name: Provision rds instance
  rds:
    command: create
    profile: "{{ aws_profile}}"
    region: "{{ aws_region }}"
    instance_name: "{{ rds_instance_name }}"
    db_engine: MySQL
    engine_version: 8.0.20
    size: 20
    instance_type: db.t2.micro
    port: 3306
    db_name: "{{ rds_db_name }}"
    username: "{{ rds_username }}"
    password: "{{ rds_password }}"
    subnet: "rds_subnet_group_{{ rds_vpc_id }}"
    vpc_security_groups: 
      - "{{ rds_sg.group_id }}"
    publicly_accessible: no
    wait: yes
    wait_timeout: 600
    tags:
      Name: "{{ rds_instance_name }}"
  register: rds

- debug:
    msg: "The rds endpoint is {{ rds.instance.endpoint }}"

- name: Setup VPC peering - k8s request
  ec2_vpc_peer:
    vpc_id: "{{ k8s_vpc_id }}"
    peer_vpc_id: "{{ rds_vpc_id }}"
    state: present
    profile: "{{ aws_profile }}"
    region: "{{ aws_region }}"
    tags:
      Name: "rds_k8s"
  register: rds_vpc_peer

- name: Accept local VPC peering request - rds accept
  ec2_vpc_peer:
    peering_id: "{{ rds_vpc_peer.peering_id }}"
    state: accept
    profile: "{{ aws_profile }}"
    region: "{{ aws_region }}"
  register: rds_action_peer

- name: Update the route table in the rds vpc
  ec2_vpc_route_table:
    state: present
    lookup: id
    route_table_id: "{{ rds_route_table.route_tables[0].id }}"
    vpc_id: "{{ rds_vpc_id }}"
    profile: "{{ aws_profile }}"
    region: "{{ aws_region }}"
    routes:
      - dest: "{{ k8s_vpc_cidr }}"
        vpc_peering_connection_id: "{{ rds_vpc_peer.peering_id }}"
  register: update_rds_route_table

- name: Update the MAIN route table in the k8s vpc with rds
  ec2_vpc_route_table:
    state: present
    lookup: id
    route_table_id: "{{ k8s_route_table.route_tables[0].id }}"
    vpc_id: "{{ k8s_vpc_id }}"
    profile: "{{ aws_profile }}"
    region: "{{ aws_region }}"
    routes:
      - dest: 0.0.0.0/0
        gateway_id: "{{ k8s_igw.internet_gateways.0.internet_gateway_id }}"
      - dest: "{{ rds_vpc_cidr }}"
        vpc_peering_connection_id: "{{ rds_vpc_peer.peering_id }}"
  register: rds_update_k8s_route_table
